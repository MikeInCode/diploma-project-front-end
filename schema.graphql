# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

type AcademicBaseUnit {
    id: String!
    name: String!
    parentId: String
}

type AcademicExtendedUnit {
    code: String!
    id: String!
    name: String!
    parentId: String
}

type AcademicUnits {
    departments: [AcademicBaseUnit!]!
    groups: [AcademicBaseUnit!]!
    institutes: [AcademicBaseUnit!]!
    specialities: [AcademicExtendedUnit!]!
}

type AuthenticatedUser {
    token: String!
    user: User!
}

type Department {
    id: String!
    institute: UserAcademicBaseUnit!
    name: String!
}

type Group {
    course: CourseEnum!
    id: String!
    name: String!
    speciality: Speciality!
}

type Mutation {
    login(input: LoginInput!): AuthenticatedUser!
    updateProfile(input: UpdateProfileInput!): User!
    updateUser(id: ID!, input: UpdateUserInput!): User!
}

type Query {
    academicUnits: AcademicUnits!
    groups: [Group!]!
    profile(id: ID): User!
    students(groupId: String): [Student!]!
    teachers: [Teacher!]!
}

type ScheduledSubject {
    id: ID!
    subject: Subject!
}

type Speciality {
    code: String!
    department: Department!
    id: String!
    name: String!
}

type Student {
    email: String
    firstName: String!
    group: Group!
    id: ID!
    image: String
    lastName: String!
    patronymicName: String!
    phone: String
}

type Subject {
    ECTS: String!
    id: ID!
    name: String!
    subjectCode: String!
    subjectType: SubjectTypeEnum!
}

type Teacher {
    department: Department!
    email: String
    firstName: String!
    id: ID!
    image: String
    lastName: String!
    patronymicName: String!
    phone: String
    teacherScheduledSubjects: [ScheduledSubject!]!
}

type User {
    course: CourseEnum
    department: UserAcademicBaseUnit
    email: String
    firstName: String!
    group: UserAcademicBaseUnit
    id: ID!
    image: String
    institute: UserAcademicBaseUnit!
    lastName: String!
    patronymicName: String!
    phone: String
    role: RolesEnum!
    speciality: UserAcademicExtendedUnit
    username: String!
}

type UserAcademicBaseUnit {
    id: String!
    name: String!
}

type UserAcademicExtendedUnit {
    code: String!
    id: String!
    name: String!
}

enum CourseEnum {
    FIVE
    FOUR
    ONE
    SIX
    THREE
    TWO
}

enum RolesEnum {
    ADMIN
    STUDENT
    TEACHER
}

enum SemestrEnum {
    SUMMER
    WINTER
}

enum SubjectTypeEnum {
    LABORATORY
    LECTURE
    SEMINAR
    TUTORIALS
}

input LoginInput {
    password: String!
    username: String!
}

input UpdateProfileInput {
    email: String!
    image: String!
    phone: String!
}

input UpdateUserInput {
    department: String
    email: String!
    firstName: String!
    group: String
    image: String!
    lastName: String!
    patronymicName: String!
    phone: String!
}


scalar DateTime